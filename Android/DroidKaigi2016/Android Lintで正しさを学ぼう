開始日 13:00〜13:50
開発環境・ツール

農業向けサービス：アグリノート

書籍
・とびだそう！Androidプログラミング

▪︎品質を表す指標

13:02
・Lintとは
 構文チェックツール
 →HTML、JavaScript、Java、Android

Android
・Google公式
・２００以上のルール

マニフェスト
リソース
グレードル
ジェネリック
プロパティファイル

- LinearLayoutに並べたビューが表示されないのは何故？
  ・LinearLayoutのデフォルトはHorizon：２
    orientationは明示的に設定

- FragmentTransactionのcommit()を呼び忘れていませんか？：７

- SharedPreferenceのcommit()を呼び忘れていませんか？：６
xml形式でデータを保存
appley()がベター
commit()を試用する場合は正常に終了しているか分岐を噛ませる

- Toastのshow()を呼び忘れていませんか？

- メモリ喰いなやつらのrecycle()を呼び忘れていませんか？：８


- OKボタンを左に置いてもいいのは小学生までですよ？
ボタンの配置について「キャンセル」は左、「OK」は右
※APi14以上
※API系13以下はボタンの配置が逆

- ユーザーが見るテキストをレイアウトに直書きした・・・？
ハードコーディングはダメ

ベタ書き→Option + Enter→ リソースへ

他国言語文字列リソースの切り替え
values-ja
values-「国記号」

- そのContentProvider、丸見えですよ？：５
exportedがデフォルトtrue
外部アプリからcontent://hogehogeで読み取られる
Providerは明示的にfalseを指定
API17以上はデフォルトでfalse


- EditTextにinputTypeやhintを指定してありますか？：５
idのphoneと記述していると
inputTypeはphoneにしなければならない...

- アイコンの色や大きさ、それでいいですか？：６
マテリアルデザインの登場により、アプリごとに鮮やかに表示されるように、、
無難色を指定してすること





- 同じアイコンが別名で複数ありますけど無駄じゃないですか？


- その三点リーダ（...）、まさかピリオドで書いてないですよね？：５
フォントによってピリオドが都合よく...になるとは限らない
ISOでちゃんと指定するように

品質指標


正しくAndroid SDKを正しく使用していることが
品質の担保としてといっていいのでは

・優先度が低いルールはignore
予算や、スケジュールに応じて、ERROR、WARNINGのの件数を決める


abortOnError false
 途中でFatal、Errorがある場合はビルドをやめる
 ignoreで明示的に指定すること


 黄色マークは無視しないこと
 ２００以上のルールを回避している証拠なので
 品質として十分に担保されているとこが証明できる



* 初学者がやりがちなミス
	- LinearLayoutに並べたビューが表示されないのは何故？
	- FragmentTransactionのcommit()を呼び忘れていませんか？
	- SharedPreferenceのcommit()を呼び忘れていませんか？
	- Toastのshow()を呼び忘れていませんか？
	- メモリ喰いなやつらのrecycle()を呼び忘れていませんか？
	- OKボタンを左に置いてもいいのは小学生までですよ？
	- ユーザーが見るテキストをレイアウトに直書きした・・・？
* もっと上を目指す人のために
	- そのContentProvider、丸見えですよ？
	- EditTextにinputTypeやhintを指定してありますか？
	- アイコンの色や大きさ、それでいいですか？
	- 同じアイコンが別名で複数ありますけど無駄じゃないですか？
	- その三点リーダ（...）、まさかピリオドで書いてないですよね？
